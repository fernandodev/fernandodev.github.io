<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <generator uri="http://jekyllrb.com" version="4.4.1">Jekyll</generator>
  
  
  <link href="https://fernandodev.com/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://fernandodev.com/" rel="alternate" type="text/html" hreflang="en" />
  <updated>2025-06-04T19:08:33+00:00</updated>
  <id>https://fernandodev.com/</id>

  
    <title type="html">fernandodev</title>
  

  
    <subtitle>A minimal blog about software development, programming, technology and other things I may like.</subtitle>
  

  
    <author>
        <name>fernandodev</name>
      
      
    </author>
  

  
  
    <entry>
      
      <title type="html">Flashing linxdot helium miner</title>
      
      
      <link href="https://fernandodev.com/2025/06/04/flashing-linxdot-helium-miner/" rel="alternate" type="text/html" title="Flashing linxdot helium miner" />
      
      <published>2025-06-04T19:00:13+00:00</published>
      <updated>2025-06-04T19:00:13+00:00</updated>
      <id>https://fernandodev.com/2025/06/04/flashing-linxdot-helium-miner</id>
      <content type="html" xml:base="https://fernandodev.com/2025/06/04/flashing-linxdot-helium-miner/">&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/fernandodev/linxdot-rockchip-flash/refs/heads/main/linxdot.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Impressive how certain projects just vanishes from day to nigh in the crypto world. Linxdot was a miner that simply stopped working. Not that it was giving any meaningfull reward, but hey! Why just dying from nothing?&lt;/p&gt;

&lt;p&gt;I thought it was a Wifi issue and then after a very long time I entered the discord server of Linxdot. What a mess! Completely abandoned and I wonder why they still sell these devices, they don’t even work anymore.&lt;/p&gt;

&lt;p&gt;Anyway, I had this paper weight laying around and I needed to ressurect it. I then saw I guy talking about the &lt;a href=&quot;https://crankk.io&quot;&gt;Crankk.io&lt;/a&gt; project and it seemed it can not only mine Helium but also do some other mining activities.&lt;/p&gt;

&lt;p&gt;But…. I needed to flash this piece of plastic and here we are after weeks researching (cause all tutorial were for Windows).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;Getting Started&lt;/h2&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;automake autoconf libusb lsusb pkg-config
git clone https://github.com/rockchip-linux/rkdeveloptool
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rkdeveloptool
autoreconf &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
./configure
make
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is possible that during &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./configure&lt;/code&gt; phase you face some issue related to pointers or buffer overflow. Adjust the configuration accordingly. (usually ignore the warnings, because default treat warnings as errors)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My current hardware is a M1 Pro.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Boot loader&lt;/h2&gt;

&lt;p&gt;The file x.bin is the rockchip bootloader of this device, you will need it to be able to boot correctly your device.&lt;/p&gt;

&lt;h2&gt;Flashing&lt;/h2&gt;

&lt;p&gt;This step is the trickiest one, follow accordingly!&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Connect USB-C to the miner and on your laptop&lt;/li&gt;
  &lt;li&gt;Connect ethernet cable (yes, it cannot be just wifi)&lt;/li&gt;
  &lt;li&gt;Now hold the BT pair little button&lt;/li&gt;
  &lt;li&gt;While holding the BT pair button, connect the power plug, keep holding the button&lt;/li&gt;
  &lt;li&gt;Hold for more 8s or so&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The LED lights are now 1 green and 1 red. It indicates that you are now on flash mode.&lt;/p&gt;

&lt;h2&gt;Flashing&lt;/h2&gt;

&lt;p&gt;Check if the flash worked by checking the devices connected to the usb (sometimes you need to restart your laptop after installing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libusb&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsusb&lt;/code&gt;)&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsusb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You should see something like:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bus 002 Device 001: ID 2207:350a Fuzhou Rockchip Electronics Co., Ltd. Composite Device
Bus 000 Device 000: ID 2207:350a Fuzhou Rockchip Electronics Co., Ltd. USB 3.1 Bus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then you successfully connected on flash mode. Raise your hands to sky, because this is hard sometimes.&lt;/p&gt;

&lt;p&gt;Now check if you connected on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loader&lt;/code&gt; mode:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool ld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This should print:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DevNo=1	Vid=0x2207,Pid=0x350a,LocationID=201	Loader
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If it is not in loader mode, (maybe Maskrom), it means you have to do again. Disconnect the power and retry the flashing procedure.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Erase the flash memory&lt;/li&gt;
  &lt;li&gt;Install the bootloader&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool ef
Erasing flash complete.
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool db rk356x_spl_loader_ddr1056_v1.10.111.bin
Downloading bootloader succeeded.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Disconnect the power from the miner and enter on flash mode again&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool ld
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This should print:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DevNo=1	Vid=0x2207,Pid=0x350a,LocationID=201	Maskrom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now you can upload the image you want to use on your device. Let’s assume you want to use &lt;a href=&quot;https://crankk.io/guides/crankk-official-guide-for-onboarding-a-linxdot-rk3566-gateway#section1&quot;&gt;Crankk OS&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool cs 1
Change Storage OK.
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool wl 0 crankkos-linxdotrk3566-1.0.0.img
Write LBA from file &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool td
Test Device OK.
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rkdeveloptool rd
Reset Device OK.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now just restart your device, disconnect the usb, and crankk it!!!&lt;/p&gt;

&lt;h2&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.radxa.com/Rockpi4/install/rockchip-flash-tools&quot;&gt;Rockchip Devtool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://wiki.radxa.com/Rockpi4/dev/usb-install&quot;&gt;Rockchip Flashing&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/fernandodev/linxdot-rockchip-flash&quot;&gt;Flash Linxdot&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="crypto" />
      

      
        <category term="crypto" />
      
        <category term="helium" />
      
        <category term="linxdot" />
      

      
        <summary type="html">Impressive how certain projects just vanishes from day to nigh in the crypto world. Linxdot was a miner that simply stopped working. Not that it was giving any meaningfull reward, but hey! Why just dying from nothing? I thought it was a Wifi issue and then after a very long time I entered the discord server of Linxdot. What a mess! Completely abandoned and I wonder why they still sell these devices, they don’t even work anymore. Anyway, I had this paper weight laying around and I needed to ressurect it. I then saw I guy talking about the Crankk.io project and it seemed it can not only mine Helium but also do some other mining activities. But…. I needed to flash this piece of plastic and here we are after weeks researching (cause all tutorial were for Windows).</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Baby steps: creating seeds on NextJS</title>
      
      
      <link href="https://fernandodev.com/2025/04/14/baby-steps-creating-seeds-on-nextjs/" rel="alternate" type="text/html" title="Baby steps: creating seeds on NextJS" />
      
      <published>2025-04-14T18:52:16+00:00</published>
      <updated>2025-04-14T18:52:16+00:00</updated>
      <id>https://fernandodev.com/2025/04/14/baby-steps:-creating-seeds-on-nextjs</id>
      <content type="html" xml:base="https://fernandodev.com/2025/04/14/baby-steps-creating-seeds-on-nextjs/">&lt;p&gt;I come from a background in Ruby on Rails and there things are extremely simple, or at least I find them quite simple.&lt;/p&gt;

&lt;p&gt;I decided then to start a new pet project using NextJS, I am obviously quite lost. So I am doing little by little, step by step, rediscovering things in a completely different environment.&lt;/p&gt;

&lt;p&gt;Today I wanted to make a simple task: seed my DB.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;First of all I am assuming you have followed the NextJS initial setup and then, added the Prisma library.&lt;/p&gt;

&lt;p&gt;So I created in my &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema.prisma&lt;/code&gt; an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;User&lt;/code&gt; model&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then I’ve run the initial commands to generate the prisma client and the initial migration&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx prisma generate
npx prisma migrate dev &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‼️ Note that it will create under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src&lt;/code&gt; a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;generated&lt;/code&gt; folder with the Prisma client. This is important to note as I’ve got stuck trying to understand why prisma client wasn’t working properly.&lt;/p&gt;

&lt;h2&gt;Seed&lt;/h2&gt;

&lt;p&gt;I’ve created a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;seed.ts&lt;/code&gt; under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prisma/&lt;/code&gt; folder. And there I’ve setup my seed script:&lt;/p&gt;

&lt;div class=&quot;language-ts highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PrismaClient&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;../src/generated/prisma&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prisma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;PrismaClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prisma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;createMany&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;alice@example.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Alice&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;bob@example.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Bob&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Seeding complete&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Error during seeding:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prisma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;$disconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;‼️ Note that I am using the generated Prisma client!&lt;/p&gt;

&lt;h2&gt;Task&lt;/h2&gt;

&lt;p&gt;Now to make the task available via CLI, it is required the ts-node library&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; ts-node
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And then finally on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;&quot;prisma&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;seed&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ts-node --compiler-options {&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;CommonJS&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;} prisma/seed.ts&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2&gt;Finally&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx prisma db seed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And it works amazingly fine!!!&lt;/p&gt;

&lt;p&gt;OMG HOW CRAZY IT WAS, and compared to Rails… it is an entire new world there!&lt;/p&gt;

&lt;p&gt;You can check your user doing:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npx prisma studio
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2&gt;Music of the day&lt;/h2&gt;

&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https://open.spotify.com/embed/track/3CSG8VPGyLAX8uTV99a9RU?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;120&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="nextjs" />
      

      
        <category term="nextjs" />
      
        <category term="prisma" />
      

      
        <summary type="html">I come from a background in Ruby on Rails and there things are extremely simple, or at least I find them quite simple. I decided then to start a new pet project using NextJS, I am obviously quite lost. So I am doing little by little, step by step, rediscovering things in a completely different environment. Today I wanted to make a simple task: seed my DB.</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Should it crash?</title>
      
      
      <link href="https://fernandodev.com/2025/04/01/should-it-crash/" rel="alternate" type="text/html" title="Should it crash?" />
      
      <published>2025-04-01T18:25:27+00:00</published>
      <updated>2025-04-01T18:25:27+00:00</updated>
      <id>https://fernandodev.com/2025/04/01/should-it-crash</id>
      <content type="html" xml:base="https://fernandodev.com/2025/04/01/should-it-crash/">&lt;p&gt;Recently while doing some migration from objective-c to swift and I found a line of code that seemed to me that it should crash, and yet, it didn’t crash on production. It was an objective-c code bridged to swift as an implicit unwrapped (!). So here is the snippet, more or less:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// The bridged generated interface from the objective-c&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;BridgedClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// contains a nil value&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ... then I had a function:&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;note&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ... and it was called&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myBridgedInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Should it crash?&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!-- more --&gt;

&lt;p&gt;The answer as you may already know is &lt;strong&gt;IT DOESN’T CRASH!&lt;/strong&gt;, but why? Isn’t &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;myBridgedInstance.importantNote&lt;/code&gt; accessing a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nil&lt;/code&gt; value? Why it is printing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nil&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;So to understand that I went to a swift playground and in short what is happening underhood is:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myBridgedInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// this is same as:&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myBridgedInstance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And therefore it won’t crash, as it is now an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Optional&lt;/code&gt;. Crazy huh? However if by any chance the developer had changed the signature of the method to:&lt;/p&gt;

&lt;div class=&quot;language-swift highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;importantNote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then it would crash on his face!&lt;/p&gt;

&lt;h2&gt;Music&lt;/h2&gt;

&lt;p&gt;A bit of this and that… old times&lt;/p&gt;

&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https://open.spotify.com/embed/track/7lOXNXztcb8CQ8UoroiNxW?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;120&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="swift" />
      

      
        <category term="swift" />
      
        <category term="crash" />
      
        <category term="optional" />
      
        <category term="unwrap" />
      

      
        <summary type="html">Recently while doing some migration from objective-c to swift and I found a line of code that seemed to me that it should crash, and yet, it didn’t crash on production. It was an objective-c code bridged to swift as an implicit unwrapped (!). So here is the snippet, more or less: // The bridged generated interface from the objective-c class BridgedClass { var importantNote: String! // contains a nil value } // ... then I had a function: func doSomething(importantNote: String?) { print(note) } // ... and it was called doSomething(importantNote: myBridgedInstance.importantNote) // Should it crash?</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Is my commit in the release branch?</title>
      
      
      <link href="https://fernandodev.com/2025/03/24/is-my-commit-in-the-release-branch/" rel="alternate" type="text/html" title="Is my commit in the release branch?" />
      
      <published>2025-03-24T19:21:28+00:00</published>
      <updated>2025-03-24T19:21:28+00:00</updated>
      <id>https://fernandodev.com/2025/03/24/is-my-commit-in-the-release-branch</id>
      <content type="html" xml:base="https://fernandodev.com/2025/03/24/is-my-commit-in-the-release-branch/">&lt;p&gt;Today I stumbled upon having to know if a specific commit was present or not in the release branch. I of course checked stackoverflow, i didn’t have it right in my mind.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;VERSION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2.4
&lt;span class=&quot;nv&quot;&gt;COMMIT_HASH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;123acaef123acaed
git log origin/release/&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;VERSION&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;COMMIT_HASH&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; - that’s I assume it is ok, just checking the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;origin&lt;/code&gt; branch&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;grep&lt;/code&gt; - also I think that’s ok, just finding the commit hash from the git log list&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wc -l&lt;/code&gt; - stands for word count and is a command-line utility that counts the number of lines, words, characters, and bytes in a file. and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-l&lt;/code&gt; flag tells wc to count only the number of lines.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;and there you go! You have effortlessly checked if your commit was present in a specific remote branch&lt;/p&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="git" />
      

      
        <category term="git" />
      
        <category term="release" />
      

      
        <summary type="html">Today I stumbled upon having to know if a specific commit was present or not in the release branch. I of course checked stackoverflow, i didn’t have it right in my mind. VERSION=2.4 COMMIT_HASH=123acaef123acaed git log origin/release/$(VERSION) | grep $(COMMIT_HASH) | wc -l git log - that’s I assume it is ok, just checking the origin branch grep - also I think that’s ok, just finding the commit hash from the git log list wc -l - stands for word count and is a command-line utility that counts the number of lines, words, characters, and bytes in a file. and -l flag tells wc to count only the number of lines. and there you go! You have effortlessly checked if your commit was present in a specific remote branch</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Implementing accessible views on iOS/SwiftUI</title>
      
      
      <link href="https://fernandodev.com/2025/03/18/ios-accessibility/" rel="alternate" type="text/html" title="Implementing accessible views on iOS/SwiftUI" />
      
      <published>2025-03-18T18:00:00+00:00</published>
      <updated>2025-03-18T18:00:00+00:00</updated>
      <id>https://fernandodev.com/2025/03/18/ios-accessibility</id>
      <content type="html" xml:base="https://fernandodev.com/2025/03/18/ios-accessibility/">&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/Ls73wNMZ/accessibility-og.jpg&quot; alt=&quot;accessibility&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These days I was working on making the iOS application complaint to the &lt;a href=&quot;https://commission.europa.eu/strategy-and-policy/policies/justice-and-fundamental-rights/disability/union-equality-strategy-rights-persons-disabilities-2021-2030/european-accessibility-act_en&quot;&gt;new EU regulations for accessibility&lt;/a&gt;. With a proper auditory of the app, it is rather easy to implement a better accessibility.&lt;/p&gt;

&lt;p&gt;However I must say, until this momentm I did not find ANY testing framework that actually covers accessibility as it is required by law.&lt;/p&gt;

&lt;p&gt;We have &lt;a href=&quot;https://github.com/cashapp/AccessibilitySnapshot&quot;&gt;AccessibilitySnapshot&lt;/a&gt; that is very limited, we also have &lt;a href=&quot;https://github.com/nalexn/ViewInspector&quot;&gt;ViewInspector&lt;/a&gt; which you can try to guarantee certain attributes. But I couldn’t find a framework that would tell me: hey you are not doing it right, group these elements, this and that should have a different accessibilityTrait etc. (In fact there is one, but I am not mentioning because it relies on ui-test and on top of that it did not find any really useful issue).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;This is not a tutorial, it is simply the findings I had after doing several tasks related to accessibility.&lt;/p&gt;

&lt;p&gt;You’ll have to be familiar with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accessibility Inspector&lt;/code&gt; tool that is available on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Xcode&lt;/code&gt;. So let’s start with that.&lt;/p&gt;

&lt;h3&gt;Accessibility Inspector&lt;/h3&gt;

&lt;p&gt;This is a tool that comes with XCode.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/25Yq76p3/Screenshot-2025-03-20-at-20-50-36.png&quot; alt=&quot;Accessibility Inspector&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In a way, similar to Xcode, you have the target which you can select. From my experience, a bit buggy. If you are using the simulator you can both use the mac target or the simulator. It may change what is available as actions, since in one you are simulating using a computer and the other a phone.&lt;/p&gt;

&lt;p&gt;Then we have a target (&lt;img src=&quot;https://i.postimg.cc/1tCfSr8N/Screenshot-2025-03-20-at-20-53-51.png&quot; height=&quot;20&quot; /&gt;), which you can use to inspect a view. (Also a bit buggy so be patient when using it with a complex view hierarchy).&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;basics&lt;/strong&gt; display the selected element accessibility attributes, such as label (what the voice over will read), the traits (how it will be interpreted), identifier (hidden from the user, but useful for ui-tests)&lt;/p&gt;

&lt;p&gt;The &lt;strong&gt;actions&lt;/strong&gt; are the possible actions that can be executed from this accessible element. You have default actions, such as &lt;em&gt;activate&lt;/em&gt;, but also you can add custom actions to it, such as the &lt;em&gt;delete&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;There are other sections, but they are not that useful, they are more informational.&lt;/p&gt;

&lt;h3&gt;Traits&lt;/h3&gt;

&lt;p&gt;Traits are useful information for the user to understand the context of the screen. A common trait that is often missing and adds context of section header is the &lt;em&gt;“isHeader”&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;largeTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accessibilityAddTraits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Another trait that I faced was &lt;em&gt;“isLink”&lt;/em&gt;. It often comes that you have terms and conditions that are linked to the webview for more details. They are not really a button.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Terms and conditions ....&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;caption&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tapGesture&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;openTermsConditions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accessibilityAddTraits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isLink&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And finally the last one that is often asked is the &lt;em&gt;isButton&lt;/em&gt;. This one comes out of the box if you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SwiftUI.Button&lt;/code&gt;, however if you have made your own custom button implementation, then you need to add this trait.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cornerRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;onTapGesture&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accessibilityAddTraits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2&gt;Grouping elements or hiding it&lt;/h2&gt;

&lt;p&gt;Another common complain is that elements that are related to each other should be grouped. For example, if you have a Card container that has several labels/buttons with information, they all should be grouped into the parent (Card) and be treated as a single element.&lt;/p&gt;

&lt;p&gt;Let’s imagine the following view with title/subtitle, image and a button for an action.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ContentView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;some&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;View&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kt&quot;&gt;HStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;systemName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;star.fill&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;largeTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bold&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accessibilityAddTraits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

                    &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Subtitle&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;font&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subheadline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;kt&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Button action here&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Press Me&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cornerRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are two problems here, one if the image is relevant then it should have an accessibility label and second the user has to read one element at time.&lt;/p&gt;

&lt;p&gt;The solution is rather simple:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kt&quot;&gt;VStack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;alignment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;leading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;spacing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;systemName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;star.fill&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yellow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accessibilityLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Starred content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;accessibilityElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;children&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;combine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.combine&lt;/code&gt; will make the voice reader to read all elements at once, one after another.&lt;/p&gt;

&lt;h2&gt;accessibilityAction&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accessibilityAction&lt;/code&gt; function in iOS Swift is used to define custom accessibility actions for UI elements, improving the app’s usability for VoiceOver and Switch Control users. It allows developers to add specific actions that assistive technologies can recognize and execute, beyond the default interactions like tapping or swiping. You should use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;accessibilityAction&lt;/code&gt; when you need to provide alternative or additional functionality for users with accessibility needs, such as marking an item as “favorite” or navigating to a different section. This function enhances accessibility by ensuring that all users, including those with disabilities, can fully interact with the app’s features.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;kt&quot;&gt;Button&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;Text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Press Me&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;foregroundColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cornerRadius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accessibilityAction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;viewModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And remember, since you are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.combine&lt;/code&gt; strategy, it will also combine all actions.&lt;/p&gt;

&lt;h2&gt;Announcement&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AccessibilityNotification.Announcement().post&lt;/code&gt; function in iOS Swift is used to send accessibility announcements to VoiceOver users. It allows developers to notify assistive technologies about important changes in the app’s UI that may not be automatically detected, such as dynamic content updates or status changes (e.g., “Download completed” or “Error occurred”). You should use this function when critical information needs to be conveyed to users relying on VoiceOver, ensuring they are aware of updates that might not be visually apparent. This improves accessibility by making real-time updates more inclusive and user-friendly.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-swift&quot; data-lang=&quot;swift&quot;&gt;&lt;span class=&quot;k&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;highPriorityAnnouncement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;AttributedString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Email address is invalid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;highPriorityAnnouncement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;accessibilitySpeechAnnouncementPriority&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;high&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;AccessibilityNotification&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Announcement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;highPriorityAnnouncement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2&gt;Reflection of the day&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;If you could put everything you’ve learned in your career on a paper how long would it take? It is easier to do little snippets every day when you learn something new…&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Music&lt;/h2&gt;

&lt;p&gt;I remember playing this music on Guitar Hero …. good old times.&lt;/p&gt;

&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https://open.spotify.com/embed/track/0FLBNqc5oAiTt4J2e3fe3y?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;120&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="ios" />
      

      
        <category term="ios" />
      
        <category term="swift" />
      
        <category term="swiftui" />
      
        <category term="accessibility" />
      

      
        <summary type="html">These days I was working on making the iOS application complaint to the new EU regulations for accessibility. With a proper auditory of the app, it is rather easy to implement a better accessibility. However I must say, until this momentm I did not find ANY testing framework that actually covers accessibility as it is required by law. We have AccessibilitySnapshot that is very limited, we also have ViewInspector which you can try to guarantee certain attributes. But I couldn’t find a framework that would tell me: hey you are not doing it right, group these elements, this and that should have a different accessibilityTrait etc. (In fact there is one, but I am not mentioning because it relies on ui-test and on top of that it did not find any really useful issue).</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Jekyll without githubpages gem limitation</title>
      
      
      <link href="https://fernandodev.com/2025/03/15/github-pages-jekyll/" rel="alternate" type="text/html" title="Jekyll without githubpages gem limitation" />
      
      <published>2025-03-15T20:20:58+00:00</published>
      <updated>2025-03-15T20:20:58+00:00</updated>
      <id>https://fernandodev.com/2025/03/15/github-pages-jekyll</id>
      <content type="html" xml:base="https://fernandodev.com/2025/03/15/github-pages-jekyll/">&lt;p&gt;&lt;img src=&quot;https://cdn.leonardo.ai/users/cb839a97-ac87-4b03-b1f8-a6069e1c7916/generations/317ffff3-add0-451d-8426-0f530ec56acc/Leonardo_Anime_XL_a_human_baby_inside_of_an_ultra_high_tech_eg_1.jpg&quot; alt=&quot;a human baby inside of an ultra high tech egg&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally! It is there and alive! This blog is now fully functional without the limitations of github-pages gem. But hey! How did I even do that? Can I still remember it? Let’s see the digested steps:&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;Getting started&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;em&gt;Did you even GPT?&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;Of course. But honestly it did not resolve or the reply was too lost in itself.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’ve took sometime to read and learn a bit about the github actions and wow! I am amazed! 🤯 It is really powerful and versatile.&lt;/p&gt;

&lt;p&gt;So here is the problem:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The theme of this blog is not supported by github pages https://pages.github.com/themes/&lt;/li&gt;
  &lt;li&gt;jekyll-archives plugin is also not supported&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then I was scretching my head, how come? Such simple thing! It just needs to build the project and then run the server.&lt;/p&gt;

&lt;p&gt;So the only way to “bypass” that limitation is by either doing it manually (which is fine, tbh) or creating a github action that will do:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;fetch the project&lt;/li&gt;
  &lt;li&gt;install the gems&lt;/li&gt;
  &lt;li&gt;build the project&lt;/li&gt;
  &lt;li&gt;push to your target branch the generated &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Setting up the repo&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;On settings/page&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/yYw2CTy9/Screenshot-2025-03-17-at-20-31-55.png&quot; alt=&quot;page setup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Source: deploy from a branch
Branch: gh-pages (the script will create this branch automatically)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;then on settings/actions/general&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/7Z3t8r68/Screenshot-2025-03-17-at-20-34-05.png&quot; alt=&quot;gh action&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will give sufficient rights to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GITHUB_TOKEN&lt;/code&gt; reserved env secret&lt;/p&gt;

&lt;h2&gt;Creating the action&lt;/h2&gt;

&lt;p&gt;This will create the workflow that GH will pick to run&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir -p .github/workflows
touch jekyll-github-pages.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and in the file &lt;strong&gt;jekyll-github-pages.yml&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build and Deploy a Jekyll Site to GitHub Pages&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;macos-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;📂 setup&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# include the lines below if you are using jekyll-last-modified-at&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# or if you would otherwise need to fetch the full commit history&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# however this may be very slow for large repositories!&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# with:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# fetch-depth: &apos;0&apos;&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;💎 setup ruby&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/setup-ruby@v1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3.2&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🔨 install dependencies &amp;amp; build site&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;limjh16/jekyll-action-ts@v2&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;enable_cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🚀 deploy&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;github_token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;publish_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./_site&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# if the repo you are deploying to is &amp;lt;username&amp;gt;.github.io, uncomment the line below.&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# if you are including the line below, make sure your source files are NOT in the &quot;main&quot; branch:&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;# publish_branch: main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You literally don’t need to change anything.&lt;/p&gt;

&lt;p&gt;Now I have to say that &lt;a href=&quot;https://www.moncefbelyamani.com/making-github-pages-work-with-latest-jekyll&quot;&gt;this blog&lt;/a&gt; has helped me a lot.&lt;/p&gt;

&lt;p&gt;With a bit of effort, debugging, in no time i got it running correctly.&lt;/p&gt;

&lt;p&gt;In the end the script will create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt; branch and there will upload ONLY the contents of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_site&lt;/code&gt; with a special file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.nojekyll&lt;/code&gt;. This file will tell Github to serve the contents as it is, skipping the jekyll build phase.&lt;/p&gt;

&lt;h2&gt;Reflection of the day&lt;/h2&gt;

&lt;p&gt;My friend, &lt;a href=&quot;https://holyswift.app/&quot;&gt;Leonardo&lt;/a&gt; once told me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;After you reach a plateau in your career, it is very likely that if you stop studying, your skill will actually start to degrade over time. The only way to avoid it is to simply learn everyday a little bit of this and that. With time, it will accumulate and you’ll have a wide range of knowledge. If you compare yourself with someone that reached its plateau, but did not act to continue learn, the gap between the two of you will be huge, sometimes so big that it won’t be able to follow each other.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;He then dropped me a chart:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.imgflip.com/9np2o0.jpg&quot; alt=&quot;Career progress&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I can only agree.&lt;/p&gt;

&lt;h2&gt;Music&lt;/h2&gt;

&lt;p&gt;Porcupine Tree is one of the bands that I often listen to, and it never disappoints me.&lt;/p&gt;

&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https://open.spotify.com/embed/track/4McAd0Ki8W0L5VMAzQfgwj?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;120&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="jekyll" />
      
        <category term="github-pages" />
      

      
        <category term="jekyll" />
      

      
        <summary type="html">Finally! It is there and alive! This blog is now fully functional without the limitations of github-pages gem. But hey! How did I even do that? Can I still remember it? Let’s see the digested steps:</summary>
      

      
      
    </entry>
  
  
  
    <entry>
      
      <title type="html">Hello World</title>
      
      
      <link href="https://fernandodev.com/2025/03/14/hello-world/" rel="alternate" type="text/html" title="Hello World" />
      
      <published>2025-03-14T20:24:58+00:00</published>
      <updated>2025-03-14T20:24:58+00:00</updated>
      <id>https://fernandodev.com/2025/03/14/hello-world</id>
      <content type="html" xml:base="https://fernandodev.com/2025/03/14/hello-world/">&lt;p&gt;&lt;img src=&quot;https://cdn.leonardo.ai/users/cb839a97-ac87-4b03-b1f8-a6069e1c7916/generations/8c1c1aa5-3f27-4f35-8652-cc0a046eaa91/Leonardo_Anime_XL_a_photo_real_image_of_a_VFX_artist_working_o_2.jpg&quot; alt=&quot;a photo real image of a VFX artist working on a very advanced computer workstation while he is sitting down on a desk that is floating on a cloud high up above his home with many other artists floating on similar workstations on nearby clouds with holographic connections between all the workstations&quot; loading=&quot;lazy&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is it! The very first initial commit of all: &lt;strong&gt;hello world&lt;/strong&gt;. To be very clear this blog is going to help me to keep on track, to learn new things, and also to not forget them. But, if you want learn together, let’s go then!&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2&gt;$ Whoami&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; fernando, programmer, iOS developer&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;So, here is the fomula:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I am definetely cheapsteak&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;A &lt;a href=&quot;https://github.com/fernandodev/fernandodev.github.io&quot;&gt;github pages&lt;/a&gt;, free, static, no glitter&lt;/li&gt;
  &lt;li&gt;A domain I had parked for years, I can’t even remember why I bought it, but now it comes handy&lt;/li&gt;
  &lt;li&gt;Jekyll. If you read the &lt;a href=&quot;/about&quot;&gt;“about”&lt;/a&gt; you know I love Ruby and I really find this framework nice and clean&lt;/li&gt;
  &lt;li&gt;I could build my own theme, BUT, no, I won’t spend time searching how to center a div, a &lt;a href=&quot;https://github.com/yous/whiteglass&quot;&gt;simple theme is enough&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Problems&lt;/h3&gt;

&lt;p&gt;jekyll-archives is not compatible with github pages. Pitty. That gem allows to have linkable tags and categories.&lt;/p&gt;

&lt;p&gt;Though there are ways to workaround it, I did not like any of them. The first I saw was to manually process the tags, create a github action and hadouken. The second was even worse, do it manually with some scripts here and there.&lt;/p&gt;

&lt;p&gt;I was thinking on just adding the static tags. I could also have the tags and filter them out dynamically using js.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I will try to come up with something simpler. For now I barely have one post.&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;Reflection of the day&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Brain rot&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Colloquial term describing the decline in mental or intellectual capabilities resulting from excessive consumption of trivial or low-quality online content, particularly on social media platforms.&lt;/p&gt;

&lt;p&gt;Symptoms associated with “brain rot” include reduced attention spans, impaired memory, decreased critical thinking skills, and disrupted sleep patterns. For instance, activities like endless scrolling through memes, watching short-form videos without educational value, or engaging in superficial online interactions are commonly cited as contributors to this cognitive decline.&lt;/p&gt;

&lt;p&gt;The term’s significance was underscored in 2024 when Oxford University Press selected “brain rot” as its Word of the Year&lt;/p&gt;

&lt;h2&gt;Music&lt;/h2&gt;

&lt;p&gt;I love music and everything I do, I do listening to something. So this post was written while I was listening to:&lt;/p&gt;

&lt;iframe style=&quot;border-radius:12px&quot; src=&quot;https://open.spotify.com/embed/track/6q4aoWgTQ8td2AvqQXuFqm?utm_source=generator&quot; width=&quot;100%&quot; height=&quot;120&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot; allow=&quot;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&quot; loading=&quot;lazy&quot;&gt;&lt;/iframe&gt;</content>

      
      
      
      
      

      
        <author>
            <name>fernandodev</name>
          
          
        </author>
      

      
        <category term="jekyll" />
      

      
        <category term="inspiration" />
      
        <category term="jekyll" />
      
        <category term="initial" />
      

      
        <summary type="html">This is it! The very first initial commit of all: hello world. To be very clear this blog is going to help me to keep on track, to learn new things, and also to not forget them. But, if you want learn together, let’s go then!</summary>
      

      
      
    </entry>
  
  
</feed>
